import { Palette, StyleMetrics } from "std-widgets.slint";
import { ProfileState } from "profile-state.slint";

export struct ProfileData {
  cover_image: image,
  title: string,
  year: string,
  path_to_profile: string,
  temp_path: string,
  name: string,
}

export component ProfileTile {
    in property <image> cover-image;
    in property <string> title;
    in property <string> year;
    in property <string> path_to_profile;
    in property <string> temp_path;
    in property <string> name;

    private property <bool> hovered: mouse_area.has-hover;

    horizontal-stretch: 1;
    vertical-stretch: 1;

    callback open_game(string);

    origin := Rectangle {
        width: hovered ? 210px : 200px;
        height: hovered ? 310px : 300px;
        animate width {
            duration: 200ms;
            easing: ease-in-out;
        }
        animate height {
            duration: 200ms;
            easing: ease-in-out;
        }
        background: Palette.background;
        border-radius: StyleMetrics.layout-padding;
        border-width: StyleMetrics.layout-spacing;
        border-color: Palette.accent-foreground;
        drop-shadow-color: #00000080;
        drop-shadow-offset-x: 2px;
        drop-shadow-offset-y: 2px;
        drop-shadow-blur: 5px;

        VerticalLayout {
            padding: 0px;
            spacing: 0px;

            Rectangle {
                height: origin.height / 1.25;
                Image {
                    source: cover-image;
                    height: parent.height;
                    width: parent.width;
                    image-fit: cover;
                    Rectangle {
                        height: parent.height;
                        width: parent.width;
                        background: hovered ? #FFFFFF10 : #00000000;
                        animate background {
                            duration: 200ms;
                            easing: ease-in-out;
                        }
                    }
                }
            }

            Rectangle {
                height: origin.height / 5;
                background: #0f0f0f;

                VerticalLayout {
                    padding: 8px;
                    spacing: 2px;
                    Text {
                        text: root.title;
                        color: Palette.selection-background;
                        font-size: hovered ? 15px : 14px;
                        font-weight: 600;
                        animate font-size {
                            duration: 200ms;
                            easing: ease-in-out;
                        }
                    }

                    Text {
                        text: root.temp_path;
                        color: Palette.control-foreground;
                        font-size: 12px;
                    }
                }
            }
        }

        // Mouse area for hover detection
        mouse_area := TouchArea {
            clicked => {
                ProfileState.title = root.title;
                ProfileState.year = root.year;
                ProfileState.path_to_profile = root.path_to_profile;
                ProfileState.cover_image = root.cover_image;
                ProfileState.name = root.name;
                ProfileState.temp_path = root.temp_path;
                root.open_game(temp_path);
            }
        }
    }
}
